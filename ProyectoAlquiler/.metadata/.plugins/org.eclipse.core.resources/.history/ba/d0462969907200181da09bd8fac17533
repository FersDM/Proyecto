package gui;

import arreglo.ArregloLibros;
import clase.Libro;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import org.omg.IOP.TAG_RMI_CUSTOM_MAX_STREAM_FORMAT;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class Virtual_4 extends JFrame implements ActionListener {
	
	private static final long serialVersionUID = 1L;
	
	private JPanel contentPane;
	private JLabel lblId;
	private JLabel lblTitulo;
	private JLabel lblStock;
	private JLabel lblPrecio;
	private JTextField txtId;
	private JTextField txtTitulo;
	private JTextField txtStock;	
	private JTextField txtPrecio;
	private JButton btnAdicionar;
	private JButton btnConsultar;
	private JButton btnModificar;
	private JButton btnEliminar;
	private JScrollPane scrollPane;
	private JTable tblTabla;
	private DefaultTableModel modelo;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Virtual_4 frame = new Virtual_4();
					frame.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Virtual_4() {
		setTitle("Actividad Virtual 4");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 630, 370);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
	
		lblId = new JLabel("Id");
		lblId.setBounds(10, 11, 40, 28);
		contentPane.add(lblId);
		
		txtId = new JTextField();
		txtId.setBounds(30, 11, 40, 28);
		contentPane.add(txtId);
		txtId.setColumns(10);
		
		lblTitulo = new JLabel("Título");
		lblTitulo.setBounds(90, 11, 50, 28);
		contentPane.add(lblTitulo);
		
		txtTitulo = new JTextField();
		txtTitulo.setBounds(130, 11, 100, 28);
		contentPane.add(txtTitulo);
		txtTitulo.setColumns(10);
		
		lblStock = new JLabel("Stock");
		lblStock.setBounds(245, 11, 40, 28);
		contentPane.add(lblStock);
		
		txtStock = new JTextField();
		txtStock.setBounds(285, 11, 40, 28);
		contentPane.add(txtStock);
		txtStock.setColumns(10);
		
		lblPrecio = new JLabel("Precio S/");
		lblPrecio.setHorizontalAlignment(SwingConstants.RIGHT);
		lblPrecio.setBounds(325, 11, 70, 28);
		contentPane.add(lblPrecio);
		
		txtPrecio = new JTextField();
		txtPrecio.setBounds(402, 11, 40, 28);
		contentPane.add(txtPrecio);
		txtPrecio.setColumns(10);

		btnAdicionar = new JButton("Adicionar");
		btnAdicionar.addActionListener(this);
		btnAdicionar.setBounds(450, 50, 155, 23);
		contentPane.add(btnAdicionar);
		
		btnConsultar = new JButton("Consultar");
		btnConsultar.addActionListener(this);
		btnConsultar.setBounds(450, 75, 155, 23);
		contentPane.add(btnConsultar);
		
		btnModificar = new JButton("Modificar");
		btnModificar.addActionListener(this);
		btnModificar.setBounds(450, 100, 155, 23);
		contentPane.add(btnModificar);
		
		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(450, 125, 155, 23);
		contentPane.add(btnEliminar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 50, 432, 274);
		contentPane.add(scrollPane);
		
		tblTabla = new JTable();
		tblTabla.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTabla);

		modelo = new DefaultTableModel();
		modelo.addColumn("id");
		modelo.addColumn("título");
		modelo.addColumn("stock");
		modelo.addColumn("precio");
		tblTabla.setModel(modelo);
		
		listar();		
	}
	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(arg0);
		}
		if (arg0.getSource() == btnModificar) {
			actionPerformedBtnModificar(arg0);
		}
		if (arg0.getSource() == btnConsultar) {
			actionPerformedBtnConsultar(arg0);
		}
		if (arg0.getSource() == btnAdicionar) {
			actionPerformedBtnAdicionar(arg0);
		}
	}

	//  Declaración global
	ArregloLibros al = new ArregloLibros();
	
	protected void actionPerformedBtnAdicionar(ActionEvent arg0) {
		
		
	}
	protected void actionPerformedBtnConsultar(ActionEvent arg0) {
	  
		try {
			Libro x =al.buscarLibro(leerId());
			  if(x!=null){
				 txtTitulo.setText(x.getTitulo()); 
				 txtStock.setText(x.getTitulo()); 
				 txtPrecio.setText(x.getTitulo()); 
				 
			  }
			  else {mensaje("No existe");}
		} catch (Exception e) {

         txtId.setText(null);
         txtId.requestFocus();
         mensaje("Ingrese Id");
		}
		
		
		
	}
	protected void actionPerformedBtnModificar(ActionEvent arg0) {
		/**
		 * Modifique los datos de un libro
		 */	modificarObj();
		 adicinarNuevo();
		
	
	}
	protected void actionPerformedBtnEliminar(ActionEvent arg0) {
		   try {
		    	 al.eliminarLibro(leerId());
		    	 listar();
				
			} catch (Exception e) {
				mensaje("Ingrese Id");
			}
	}
	//  Métodos tipo void sin parámetros
	void limpieza() {
		txtId.setText("");
		txtTitulo.setText("");
		txtStock.setText("");
		txtPrecio.setText("");
		txtId.requestFocus();
	}
	
   	void listar() {
		modelo.setRowCount(0);
		
		for (int i = 0; i <al.tamaño(); i++) {
			Object fila[]={
					al.obtener(i).getId(),
					al.obtener(i).getTitulo(),
					al.obtener(i).getStock(),
					al.obtener(i).getPrecio()
			};
			modelo.addRow(fila);
			
		}
	
	}
	//  Métodos tipo void con parámetros
	void mensaje(String s) {
		JOptionPane.showMessageDialog(this, s);
	}		
	//  Métodos que retornan valor sin parámetros
	int leerId() {
		return Integer.parseInt(txtId.getText().trim());
	}
	String leerTitulo() {
		return txtTitulo.getText().trim();
	}
	int leerStock() {
		return Integer.parseInt(txtStock.getText().trim());
	}
	double leerPrecio() {
		return Double.parseDouble(txtPrecio.getText().trim());
	}
	public void modificarObj(){
		if (al.tamaño() == 0)
			limpieza();
		else {
			Libro x = al.obtener(tblTabla.getSelectedRow());
			txtId.setText(""+ x.getId());
			txtTitulo.setText(x.getTitulo());
			txtStock.setText(""+x.getStock());
			txtPrecio.setText("" + x.getPrecio());
		}
	}
	
	public void adicinarNuevo(){
		int id = leerId();
		String titulo = leerTitulo();
		int stock=leerStock();
		double precio=leerPrecio();
		
		if (al.buscarId(id)!=id){
		Libro nuevo = new Libro(id,titulo,stock,precio);
		al.adicionar(nuevo);}
		else mensaje("Id "+ id +" ya existe ");
			
        		
		listar();
		

	}
}